{"version":3,"sources":["js/scenes/sign-page/language/Languages.js","js/scenes/sign-page/language/LanDrpdwn.js","js/scenes/sign-page/register/register-config.js","js/scenes/sign-page/register/RegisterRadio.js","js/scenes/sign-page/register/RegisterInput.js","js/scenes/sign-page/register/RegisterNew.js","js/scenes/sign-page/sign-up/PCSignUp.js","js/scenes/sign-page/login/login-config.js","js/scenes/sign-page/login/LoginInput.js","js/scenes/sign-page/login/Login.js","js/scenes/sign-page/sign-in/PCSignIn.js","js/scenes/sign-page/PCSignPage.js"],"names":["Languages","getUlNo","windowWidth","LanDrpdwn","_ref","selectedLan","setSelectedLan","_useState","useState","window","innerWidth","_useState2","Object","slicedToArray","ulNo","setUlNo","func","i","each","index","length","elem","react_default","a","createElement","className","onClick","addEventListener","Fragment","drpdwnHTMLArr","_loop","liElemArr","map","liElem","push","createDrpdwnUl","drpdwnHTML","REGISTER_CONFIG","dispVal","key","type","values","name","RegisterRadio","rowDtls","registerData","setRegisterData","for","id","value","onChange","evt","tempObj","JSON","parse","stringify","target","RegisterInput","register_RegisterRadio","radioBtns","autoComplete","checkIfInptFldValid","iIfEmptyInptFld","keys","filter","checkIfNonEmptyInptFld","ifPassMatch","checkIfPassMatch","Register","_useContext","useContext","Store","dispatch","state","navigation","subPage","_useState3","error","isLoading","errorText","successText","_useState4","errorInEmail","setErrorInEmail","ifInptFldValid","console","log","register_RegisterInput","res","makeApiCall","data","result","isValid","onSubmit","class","signInBtnClickHandler","PCSignUp","RegisterNew","LOGIN_CONFIG","LoginInput","loginData","setLoginData","Login","login_LoginInput","userLoginAction","userLoginStatusAction","goToPagesAction","PCSignIn","sign_page_login_Login","PCSignPage","showLanDrpdwn","setShowLanDrpdwn","_useState5","_useState6","selectedSubPage","setSelectedSubPage","useEffect","viewBox","focusable","data-icon","width","height","fill","aria-hidden","d","sign_page_language_LanDrpdwn","sign_page_sign_in_PCSignIn","sign_page_sign_up_PCSignUp"],"mappings":"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","file":"static/js/3.bc41cf1d.chunk.js","sourcesContent":["const Languages = [\r\n  \"English(US)\",\r\n  \"English(UN)\",\r\n  \"English(Ind)\",\r\n  \"Hindi\",\r\n  \"Bengali\",\r\n  \"Tamil\",\r\n  \"Spanish\",\r\n  \"French\",\r\n  \"Japanese\",\r\n  \"Hindi\",\r\n  \"Bengali\",\r\n  \"Tamil\",\r\n  \"Spanish\",\r\n  \"French\",\r\n  \"Japanese\",\r\n  \"English(US)\",\r\n  \"English(UN)\",\r\n  \"English(Ind)\",\r\n  \"Hindi\",\r\n  \"Bengali\",\r\n  \"Tamil\",\r\n  \"Spanish\",\r\n  \"French\",\r\n  \"Japanese\",\r\n  \"Hindi\",\r\n  \"Bengali\",\r\n  \"Tamil\",\r\n  \"Spanish\",\r\n  \"French\",\r\n  \"English(US)\",\r\n  \"English(UN)\",\r\n  \"English(Ind)\",\r\n  \"Hindi\",\r\n  \"Bengali\",\r\n  \"Tamil\",\r\n  \"Spanish\",\r\n  \"French\",\r\n  \"Japanese\",\r\n  \"Hindi\",\r\n  \"Bengali\",\r\n  \"Tamil\",\r\n  \"Spanish\",\r\n  \"French\"\r\n];\r\n\r\nexport default Languages;\r\n","import React, { useState } from \"react\";\r\nimport \"./LanDrpdwn.scss\";\r\nimport Languages from \"./Languages\";\r\n\r\nconst getUlNo = windowWidth => {\r\n  let ulNo = 0;\r\n  if (windowWidth > 800) {\r\n    ulNo = 4;\r\n  } else if (windowWidth > 600) {\r\n    ulNo = 3;\r\n  } else if (windowWidth > 400) {\r\n    ulNo = 2;\r\n  } else {\r\n    ulNo = 1;\r\n  }\r\n  return ulNo;\r\n};\r\nconst LanDrpdwn = ({ selectedLan, setSelectedLan }) => {\r\n  const [ulNo, setUlNo] = useState(getUlNo(window.innerWidth));\r\n\r\n  const createDrpdwnLi = elem => {\r\n    return (\r\n      <li\r\n        className={\r\n          selectedLan === elem ? \"each-lan each-lan-selected\" : \"each-lan\"\r\n        }\r\n        onClick={() => setSelectedLan(elem)}\r\n      >\r\n        {elem}\r\n      </li>\r\n    );\r\n  };\r\n  const createDrpdwnUl = liElemArr => {\r\n    return <ul>{liElemArr}</ul>;\r\n  };\r\n  const func = (ulNo, i, each, index) => {\r\n    if (\r\n      index >= (Languages.length / ulNo) * (i - 1) &&\r\n      index < (Languages.length / ulNo) * i\r\n    ) {\r\n      return createDrpdwnLi(each);\r\n    }\r\n  };\r\n  const drpdwnHTML = ulNo => {\r\n    const drpdwnHTMLArr = [];\r\n    for (let i = 1; i <= ulNo; i++) {\r\n      const liElemArr = [];\r\n      Languages.map((each, index) => {\r\n        let liElem = func(ulNo, i, each, index);\r\n        liElem && liElemArr.push(liElem);\r\n      });\r\n      drpdwnHTMLArr.push(createDrpdwnUl(liElemArr));\r\n    }\r\n    return drpdwnHTMLArr;\r\n  };\r\n  window.addEventListener(\"resize\", () => {\r\n    setUlNo(getUlNo(window.innerWidth));\r\n  });\r\n  return <>{drpdwnHTML(ulNo)}</>;\r\n};\r\nexport default LanDrpdwn;\r\n","const REGISTER_CONFIG = [\r\n  {\r\n    dispVal: \"First Name\",\r\n    key: \"firstName\",\r\n    type: \"text\"\r\n  },\r\n  {\r\n    dispVal: \"Last Name\",\r\n    key: \"lastname\",\r\n    type: \"text\"\r\n  },\r\n  {\r\n    dispVal: \"Password\",\r\n    key: \"firstpassword\",\r\n    type: \"password\"\r\n  },\r\n  {\r\n    dispVal: \"Confirm Password\",\r\n    key: \"confirmpassword\",\r\n    type: \"password\"\r\n  },\r\n  {\r\n    dispVal: \"Gender\",\r\n    key: \"gender\",\r\n    type: \"radio\",\r\n    values: [\r\n      { name: \"gender\", type: \"male\" },\r\n      { name: \"gender\", type: \"female\" }\r\n    ]\r\n  },\r\n  {\r\n    dispVal: \"Email\",\r\n    key: \"email\",\r\n    type: \"email\"\r\n  }\r\n];\r\nexport default REGISTER_CONFIG;\r\n","import React from \"react\";\r\n\r\nconst RegisterRadio = ({ rowDtls, registerData, setRegisterData }) => {\r\n  return rowDtls.values.map(each => {\r\n    return (\r\n      <>\r\n        <label for={each.type}>\r\n          <input\r\n            id={each.type}\r\n            type={rowDtls.type}\r\n            name={each.name}\r\n            value={each.type}\r\n            onChange={evt => {\r\n              const tempObj = JSON.parse(JSON.stringify(registerData));\r\n              tempObj[rowDtls.key] = evt.target.value;\r\n              setRegisterData(tempObj);\r\n            }}\r\n          />\r\n          <span>{each.type}</span>\r\n        </label>\r\n      </>\r\n    );\r\n  });\r\n};\r\n\r\nexport default RegisterRadio;\r\n","import React, { useState } from \"react\";\r\nimport RegisterRadio from \"./RegisterRadio\";\r\n\r\nconst RegisterInput = ({ rowDtls, registerData, setRegisterData }) => {\r\n  const radioBtns = rowDtls => {\r\n    return (\r\n      <RegisterRadio\r\n        rowDtls={rowDtls}\r\n        setRegisterData={setRegisterData}\r\n        registerData={registerData}\r\n      />\r\n    );\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"register-rows\">\r\n        <div className=\"register-rows-inptfld\">\r\n          {rowDtls.type === \"radio\" ? (\r\n            radioBtns(rowDtls)\r\n          ) : (\r\n            <input\r\n              name={rowDtls.key}\r\n              type={rowDtls.type}\r\n              onChange={evt => {\r\n                const tempObj = JSON.parse(JSON.stringify(registerData));\r\n                tempObj[rowDtls.key] = evt.target.value;\r\n                setRegisterData(tempObj);\r\n              }}\r\n              autoComplete={true}\r\n            ></input>\r\n          )}\r\n        </div>\r\n        <div className=\"register-rows-inptlabel\">{rowDtls.dispVal}</div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RegisterInput;\r\n","import React, { useState, useContext } from \"react\";\r\nimport \"./Register.scss\";\r\nimport REGISTER_CONFIG from \"./register-config\";\r\nimport RegisterInput from \"./RegisterInput\";\r\nimport Axios from \"axios\";\r\nimport { signInBtnClickHandler } from \"../../../actions/ApplevelActions\";\r\nimport { Store } from \"../../../store/Store\";\r\nimport makeApiCall from \"../../../api/api\";\r\n\r\nconst checkIfNonEmptyInptFld = registerData => {\r\n  const keys = Object.keys(registerData);\r\n  return keys.length === 6 &&\r\n    keys.filter(each => registerData[each].length === 0).length === 0\r\n    ? true\r\n    : false;\r\n};\r\n\r\nconst checkIfPassMatch = registerData => {\r\n  return registerData[\"firstpassword\"] &&\r\n    registerData[\"firstpassword\"].length > 3 &&\r\n    registerData[\"firstpassword\"] === registerData[\"confirmpassword\"]\r\n    ? true\r\n    : false;\r\n};\r\n\r\nconst checkIfInptFldValid = registerData => {\r\n  const iIfEmptyInptFld = checkIfNonEmptyInptFld(registerData),\r\n    ifPassMatch = checkIfPassMatch(registerData);\r\n  return iIfEmptyInptFld && ifPassMatch ? true : false;\r\n};\r\n\r\nconst Register = () => {\r\n  const { dispatch, state } = useContext(Store);\r\n  const {\r\n    navigation: { subPage }\r\n  } = state;\r\n  const [registerData, setRegisterData] = useState({});\r\n  const [errorInEmail, setErrorInEmail] = useState({\r\n    error: false,\r\n    isLoading: false,\r\n    errorText: \"\",\r\n    successText: \"\"\r\n  });\r\n\r\n  const registerInptRow = rowDtls => {\r\n    return (\r\n      <RegisterInput\r\n        rowDtls={rowDtls}\r\n        registerData={registerData}\r\n        setRegisterData={setRegisterData}\r\n      />\r\n    );\r\n  };\r\n  const registerInptFlds = () => {\r\n    return REGISTER_CONFIG.map(each => {\r\n      return registerInptRow(each);\r\n    });\r\n  };\r\n  const onSubmit = () => {\r\n    setErrorInEmail({\r\n      error: false,\r\n      isLoading: true,\r\n      errorText: \"\"\r\n    });\r\n    const res = makeApiCall(\r\n      \"POST\",\r\n      \"registerUsers\",\r\n      JSON.stringify(registerData)\r\n    );\r\n    if (!res.data.result.isValid) {\r\n      setErrorInEmail({\r\n        error: true,\r\n        isLoading: false,\r\n        errorText: res.data.result.errorText\r\n      });\r\n    } else {\r\n      setErrorInEmail({\r\n        error: false,\r\n        isLoading: false,\r\n        errorText: \"\"\r\n      });\r\n      setRegisterData({});\r\n    }\r\n  };\r\n  const ifInptFldValid = checkIfInptFldValid(registerData);\r\n  console.log(\"errorInEmail\", errorInEmail, registerData);\r\n  return (\r\n    <div className=\"register-cont\">\r\n      <div className=\"register-inpt-cont\">{registerInptFlds()}</div>\r\n      {errorInEmail.error ? (\r\n        <div className=\"email-error-txt\">\r\n          <span className=\"email-error-asterisk\">* </span>This email is already\r\n          registered. Please try with different email id.\r\n        </div>\r\n      ) : null}\r\n      <div className=\"register-btn-cont\">\r\n        <div\r\n          className={\r\n            ifInptFldValid\r\n              ? errorInEmail.isLoading\r\n                ? \"register-link register-link--isloading\"\r\n                : \"register-link\"\r\n              : \"register-link register-link-disabled\"\r\n          }\r\n          onClick={() => (ifInptFldValid ? onSubmit() : null)}\r\n        >\r\n          Register\r\n          {errorInEmail.isLoading ? <div class=\"loader\"></div> : null}\r\n          {/* <div class=\"loader\"></div> */}\r\n        </div>\r\n        <div className=\"login-link-cont\">\r\n          Already a member? Please{\" \"}\r\n          <span\r\n            className=\"login-link\"\r\n            onClick={() =>\r\n              signInBtnClickHandler(dispatch, \"SignPage\", \"SignIn\")\r\n            }\r\n          >\r\n            Login\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","import React from \"react\";\r\nimport \"./PCSignUp.scss\";\r\nimport Register from \"../register/RegisterNew\";\r\n\r\nconst PCSignUp = () => {\r\n  return (\r\n    <>\r\n      <Register />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PCSignUp;\r\n","const LOGIN_CONFIG = [\r\n  {\r\n    dispVal: \"Email\",\r\n    key: \"email\",\r\n    type: \"email\"\r\n  },\r\n  {\r\n    dispVal: \"Password\",\r\n    key: \"password\",\r\n    type: \"password\"\r\n  }\r\n];\r\nexport default LOGIN_CONFIG;\r\n","import React from \"react\";\r\n\r\nconst LoginInput = ({ rowDtls, loginData, setLoginData }) => {\r\n  return (\r\n    <>\r\n      <div className=\"login-rows\">\r\n        <div className=\"login-rows-inptfld\">\r\n          <input\r\n            name={rowDtls.key}\r\n            type={rowDtls.type}\r\n            onChange={evt => {\r\n              const tempObj = JSON.parse(JSON.stringify(loginData));\r\n              tempObj[rowDtls.key] = evt.target.value;\r\n              setLoginData(tempObj);\r\n            }}\r\n            autoComplete={true}\r\n          ></input>\r\n        </div>\r\n        <div className=\"login-rows-inptlabel\">{rowDtls.dispVal}</div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LoginInput;\r\n","import React, { useState, useContext } from \"react\";\r\nimport LOGIN_CONFIG from \"./login-config\";\r\nimport LoginInput from \"./LoginInput\";\r\nimport \"./Login.scss\";\r\nimport {\r\n  signInBtnClickHandler,\r\n  userLoginAction,\r\n  userLoginStatusAction,\r\n  goToPagesAction\r\n} from \"../../../actions/ApplevelActions\";\r\nimport { Store } from \"../../../store/Store\";\r\n\r\nconst Login = () => {\r\n  const { dispatch, state } = useContext(Store);\r\n  const {\r\n    navigation: { subPage }\r\n  } = state;\r\n  const [loginData, setLoginData] = useState({});\r\n\r\n  const loginInptRow = rowDtls => {\r\n    return (\r\n      <LoginInput\r\n        rowDtls={rowDtls}\r\n        loginData={loginData}\r\n        setLoginData={setLoginData}\r\n      />\r\n    );\r\n  };\r\n  const loginInptFlds = () => {\r\n    return LOGIN_CONFIG.map(each => {\r\n      return loginInptRow(each);\r\n    });\r\n  };\r\n  const onSubmit = () => {\r\n    userLoginAction(dispatch, JSON.stringify(loginData));\r\n    userLoginStatusAction(dispatch, true);\r\n    goToPagesAction(dispatch, \"LandingPage\", \"\");\r\n  };\r\n  console.log(\"state\", state);\r\n  return (\r\n    <>\r\n      <div className=\"login-cont\">\r\n        <div className=\"login-inpt-cont\">{loginInptFlds()}</div>\r\n        <div className=\"login-btn-cont\">\r\n          <div className=\"login-link\" onClick={() => onSubmit()}>\r\n            Login\r\n          </div>\r\n          <div className=\"register-link-cont\">\r\n            Not a member? Please{\" \"}\r\n            <span\r\n              className=\"register-link\"\r\n              onClick={() =>\r\n                signInBtnClickHandler(dispatch, \"SignPage\", \"SignUp\")\r\n              }\r\n            >\r\n              Register\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React from \"react\";\r\nimport \"./PCSignIn.scss\";\r\nimport Login from \"../login/Login\";\r\n\r\nconst PCSignIn = () => {\r\n  return (\r\n    <>\r\n      <Login />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PCSignIn;\r\n","import React, { useState, useContext, useEffect } from \"react\";\nimport \"./PCSignPage.scss\";\nimport LanDrpdwn from \"./language/LanDrpdwn\";\nimport { Store } from \"../../store/Store\";\nimport PCSignUp from \"./sign-up/PCSignUp\";\nimport PCSignIn from \"./sign-in/PCSignIn\";\n\nconst PCSignPage = () => {\n  const [showLanDrpdwn, setShowLanDrpdwn] = useState(false);\n  const [selectedLan, setSelectedLan] = useState(\"English(US)\");\n\n  const { dispatch, state } = useContext(Store);\n  const {\n    navigation: { subPage }\n  } = state;\n  const [selectedSubPage, setSelectedSubPage] = useState(subPage);\n\n  console.log(\"state in pcsignupapge\", state);\n  useEffect(() => {\n    setSelectedSubPage(subPage);\n  }, [subPage]);\n  return (\n    <>\n      <div className=\"sign-up-page\">\n        <div className=\"sign-up-header\">\n          <div\n            className=\"lan-label\"\n            onClick={() => setShowLanDrpdwn(!showLanDrpdwn)}\n          >\n            {selectedLan}\n            <svg\n              viewBox=\"64 64 896 896\"\n              focusable=\"false\"\n              class=\"\"\n              data-icon=\"down\"\n              width=\"1em\"\n              height=\"1em\"\n              fill=\"currentColor\"\n              aria-hidden=\"true\"\n              className={\n                showLanDrpdwn ? `sign-in-menu-up` : `sign-in-menu-down`\n              }\n            >\n              <path d=\"M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z\"></path>\n            </svg>\n          </div>\n          {showLanDrpdwn ? (\n            <div\n              className=\"lan-drpdwn-pgmask\"\n              onClick={() => setShowLanDrpdwn(false)}\n            ></div>\n          ) : null}\n          <div\n            className={\n              showLanDrpdwn\n                ? \"lan-drpdwn lan-drpdwn-open\"\n                : \"lan-drpdwn lan-drpdwn-close\"\n            }\n          >\n            <LanDrpdwn\n              selectedLan={selectedLan}\n              setSelectedLan={setSelectedLan}\n            />\n          </div>\n          <div className=\"sign-up-hdr-cntct-us\">Contact Us 24/7</div>\n        </div>\n      </div>\n      {selectedSubPage === \"SignIn\" ? <PCSignIn /> : <PCSignUp />}\n    </>\n  );\n};\n\nexport default PCSignPage;\n"],"sourceRoot":""}